buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.cloud:spring-cloud-contract-gradle-plugin:2.0.2.RELEASE")
    }
}

plugins {
    id "io.spring.dependency-management" version "1.0.6.RELEASE"
    id "org.springframework.boot" version "2.0.6.RELEASE"
    id "org.flywaydb.flyway" version "5.0.7"
    id "com.gorylenko.gradle-git-properties" version "1.5.1"
    id "com.palantir.docker" version "0.13.0"
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'spring-cloud-contract'

group = 'com.dmall'
version = '0.1.0'
sourceCompatibility = 1.8
targetCompatibility = 1.8

jar {
    baseName = 'order-service'
    version = "${version}"
}

docker {
    name "${project.group}/${jar.baseName}"
    files jar.archivePath
    buildArgs(['JAR_FILE': "${jar.archiveName}"])
}

repositories {
    mavenCentral()
}

ext {
    springCloudVersion = 'Finchley.SR2'
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
    implementation 'org.flywaydb:flyway-core'
    implementation 'io.springfox:springfox-swagger2:2.9.2'
    implementation 'io.springfox:springfox-swagger-ui:2.9.2'

    compileOnly 'org.projectlombok:lombok'

    testCompile 'org.springframework.boot:spring-boot-starter-test'
    testCompile 'org.springframework.cloud:spring-cloud-starter-contract-verifier'

    runtimeOnly 'com.h2database:h2'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

contracts {
    packageWithBaseClasses = 'com.dmall.orderservice.contract.base'
    contractsDslDir = project.file("api")
}
